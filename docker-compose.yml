services:
    caddy:
        depends_on:
            - server
        image: caddy:latest
        restart: unless-stopped
        ports:
            - '80:80'
            - '443:443'
            - '443:443/udp'
        volumes:
            - ./caddy/docker.Caddyfile:/etc/caddy/Caddyfile
            - ./caddy/data:/data
            - ./caddy/config:/config
        env_file:
            - ./.env.docker

    server:
        container_name: server
        build:
            context: .
            dockerfile: server.Dockerfile
        restart: unless-stopped
        ports:
            - 3000:3000
        depends_on:
            edgedb:
                condition: service_healthy
        environment:
            ORIGIN: ${SERVER_HOST}
            NODE_TLS_REJECT_UNAUTHORIZED: 0
            EDGEDB_HOST: ${EDGEDB_HOST:-edgedb}
            EDGEDB_PORT: ${EDGEDB_PORT:-5656}
            EDGEDB_BRANCH: ${EDGEDB_BRANCH:-main}
            EDGEDB_SERVER_PROTOCOL: ${EDGEDB_SERVER_PROTOCOL:-http}
            EDGEDB_DSN: edgedb://${EDGEDB_SERVER_USER:-edgedb}:${EDGEDB_SERVER_PASSWORD}@${EDGEDB_HOST:-edgedb}:${EDGEDB_PORT:-5656}/${EDGEDB_BRANCH:-main}

    edgedb:
        depends_on:
            - smtp
        container_name: edgedb
        build:
            context: .
            dockerfile: edgedb.Dockerfile
        environment:
            EDGEDB_HOST: ${EDGEDB_HOST:-edgedb}
            EDGEDB_PORT: ${EDGEDB_PORT:-5656}
            EDGEDB_SERVER_USER: ${EDGEDB_SERVER_USER:-edgedb}
            EDGEDB_SERVER_PASSWORD: ${EDGEDB_SERVER_PASSWORD:?error}
            EDGEDB_BRANCH: ${EDGEDB_BRANCH:-main}
            EDGEDB_SERVER_SECURITY: strict
            EDGEDB_SERVER_TLS_CERT_MODE: generate_self_signed
            EDGEDB_SERVER_BINARY_ENDPOINT_SECURITY: optional # For auth server TLS
            EDGEDB_SERVER_HTTP_ENDPOINT_SECURITY: optional # For auth server TLS
        volumes:
            - './dbschema:/dbschema'
            - './edgedb-data:/var/lib/edgedb/data'
        expose:
            - '5656'
        healthcheck:
            test:
                [
                    'CMD',
                    'curl',
                    '-f',
                    '${EDGEDB_SERVER_PROTOCOL:-http}://${EDGEDB_HOST:-edgedb}:${EDGEDB_PORT:-5656}/server/status/ready',
                ]
            interval: 5s
            timeout: 10s
            retries: 20
        restart: unless-stopped

    smtp:
        image: ixdotai/smtp:latest
        environment:
            SMARTHOST_ADDRESS: smtp.sendgrid.net
            SMARTHOST_PORT: 587
            SMARTHOST_USER: apikey
            SMARTHOST_PASSWORD: ${SENDGRID_KEY}
            SMARTHOST_ALIASES: '*.sendgrid.net'
        restart: unless-stopped
        expose:
            - '25'

volumes:
    edgedb-data:
