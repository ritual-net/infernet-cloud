:root {
	--fontFamily-base: 'Barlow', sans-serif;
	--fontFamily-display: 'Izoard', sans-serif;

	--color-ritualBlack: light-dark(#000, #fff);
	--color-ritualGreen: #40FFAF;
	--color-ritualGreen-light: #46E28E;
	--color-ritualGreen-dark: #28C470;
	--color-ritualPurple: #8840FF;
	--color-ritualPurple-light: #8E6EFF;
	--color-ritualPurple-dark: #6E4EF1;
	--color-ritualOrange: #E88239;
	--color-ritualOrange-light: #FF9C3A;
	--color-ritualOrange-dark: #E97E1C;

	--accentColor: light-dark(var(--color-ritualPurple), var(--color-ritualPurple-light));
	--accentColor-light: var(--color-ritualPurple-light);
	--accentColor-dark: var(--color-ritualPurple-dark);
	
	--textColor: var(--color-ritualBlack);

	--page-backgroundColor: light-dark(#FBFBFB, #101010);

	--borderColor: light-dark(#e5e5e5, #565656);
	--borderWidth: 1px;

	--backdropFilter: blur(6px);

	--transition-easeOutExpo: cubic-bezier(0.16, 1, 0.3, 1);

	--active-transitionInDuration: 0.1s;
	--active-transitionOutDuration: 0.2s;
	--active-scale: 0.975;
	--active-opacity: 0.8;

	--button-default-backgroundColor: light-dark(#fff, #0b0b0b);
	--button-default-textColor: var(--textColor);
	--button-primary-backgroundColor: var(--color-ritualBlack);
	--button-primary-textColor: light-dark(#fff, #000);

	--input-default-backgroundColor: light-dark(#fbfbfb, #191919);
	--input-default-textColor: var(--textColor);

	--card-default-backgroundColor: light-dark(rgba(255, 255, 255, 0.9), rgba(40, 40, 40, 0.9));
	--card-default-textColor: var(--textColor);

	--card-typeSuccess-backgroundColor: light-dark(rgb(246, 255, 246), rgb(16, 42, 16));
	--card-typeSuccess-borderColor: light-dark(rgba(0, 160, 0, 0.2), rgba(0, 200, 0, 0.2));

	--card-typeWarning-backgroundColor: light-dark(rgb(255, 255, 246), rgb(42, 35, 16));
	--card-typeWarning-borderColor: light-dark(rgba(160, 152, 0, 0.2), rgba(200, 190, 0, 0.2));

	--card-typeError-backgroundColor: light-dark(rgb(255, 246, 246), rgb(42, 16, 16));
	--card-typeError-borderColor: light-dark(rgba(255, 0, 0, 0.2), rgba(255, 50, 50, 0.2));
}

* {
	box-sizing: border-box;
	margin: 0;
	padding: 0;

	border: none;

	color: inherit;
	font: inherit;
	font-style: normal;
	outline-color: inherit;
	text-align: inherit;
	text-decoration-line: none;
	text-decoration-color: color-mix(in oklch, currentColor 33%, transparent);

	transition-timing-function: var(--transition-easeOutExpo);
}

:root {
	transition: 0.3s background-color var(--transition-easeOutExpo);
	background-color: var(--page-backgroundColor);

	color: var(--textColor);
	accent-color: var(--accentColor);
	outline-color: var(--accentColor);

	font-family: var(--fontFamily-base);
	font-size: 18px;
	line-height: 1.5;
	tab-size: 2;

	scroll-behavior: smooth;

	@media (prefers-color-scheme: dark) {
		color-scheme: dark;
	}
}

h1, h2, h3, h4, h5, h6 {
	text-wrap: balance;
}

h2 {
	font-size: 1.333em;
}

h3 {
	font-size: 1.25em;
}

p {
	opacity: 0.75;
	text-wrap: pretty;
}

a {
	color: var(--textColor);
	transition: 0.2s color;

	:is(p, dd) &:not(.button) {
		text-decoration-line: underline;
		text-decoration-color: color-mix(in oklch, currentColor 50%, transparent);

		&:hover {
			--textColor: var(--accentColor);
		}
	}

	nav & {
		&:hover {
			--textColor: var(--accentColor);
		}
	}

	&[aria-disabled="true"]  {
		pointer-events: none;
	}

	&.button[target="_blank"]:after {
		content: 'â†—';
		font-size: 0.66em;
		vertical-align: text-bottom;
		margin-inline-start: 0.5em;
	}
}

strong, b {
	font-weight: bold;
}

u {
	text-decoration-line: underline;
}

ol, ul {
	padding-inline-start: 1.5em;

	& > li {
		padding-inline-start: 0.25em;
	}
}

ol {
	padding-inline-start: 0;

	li {
		counter-increment: list-item;

		position: relative;
		list-style: none;

		display: grid;
		grid-template-columns: auto 1fr;
		align-items: center;
		gap: 1em;

		&::before {
			content: counter(list-item);

			width: 1.66em;
			height: 1.66em;
			padding: 0.33em;
			
			background-color: hsl(from var(--accentColor) h s l / 20%);
			background-color: color-mix(in oklch, var(--accentColor) 20%, transparent);
			border-radius: 50%;
			
			line-height: 1.66em;
			font-weight: bold;
			color: var(--accentColor-dark);
			text-align: center;
		}
	}
}

dt {
	opacity: 0.5;
	align-self: start;
}
dd {
	.row > & {
		text-align: end;
		min-width: 0;
	}
}

sub,
sup {
	font-size: smaller;
	line-height: 1;
}

pre {
	text-align: start;
	overflow: auto;
}

.stack {
	display: grid;
	grid: 'stack';
	align-items: start;

	&:before,
	&:after,
	& > * {
		grid-area: stack;
	}
}

.row {
	display: flex;
	justify-content: space-between;
	align-items: center;
	gap: 0.75em 1em;

	&.inline {
		display: inline-flex;
		align-items: baseline;
		justify-content: start;
		gap: 0.25ch 0.75ch;

		&.with-icon {
			align-items: center;
		}
	}

	&.equal > * {
		flex: 1;
	}

	&.wrap {
		flex-wrap: wrap;

		&.equal > * {
			flex-basis: 20rem;
		}
	}

	&:not(.equal) > :first-child {
		text-align: start;
	}

	&.align-start {
		align-items: start;
	}
}

.column {
	display: grid;
	grid:
		'.'
		/ minmax(0, 1fr)
	;
	gap: 1em;

	&.inline {
		gap: 0.75ex;
	}
}

input,
textarea {
	--input-paddingX: 1em;
	--input-paddingY: 0.5em;
	--input-backgroundColor: var(--input-default-backgroundColor);
	--input-borderColor: var(--borderColor);
	--input-borderWidth: var(--borderWidth);
	--input-cornerRadius: 0.33em;
	--input-textColor: var(--input-default-textColor);

	padding: var(--input-paddingY) var(--input-paddingX);

	background-color: var(--input-backgroundColor);
	box-shadow: 0 0 0 var(--input-borderWidth) var(--input-borderColor);
	border-radius: var(--input-cornerRadius);

	color: var(--input-textColor);

	transition: var(--active-transitionOutDuration) var(--transition-easeOutExpo);

	&.small {
		font-size: 0.9em;
	}

	&.smaller {
		font-size: 0.65em;
	}

	&:disabled,
	&[aria-disabled="true"] {
		cursor: not-allowed;
		opacity: 0.5;
	}
}
input {
	min-width: min(20rem, 100%);
}
textarea {
	width: 100%;
}
:user-invalid {
	outline-color: red;
}
::-webkit-input-placeholder {
	color: inherit;
	opacity: 0.5;
}


button, .button {
	--button-paddingX: 1em;
	--button-paddingY: 0.5em;
	--button-backgroundColor: var(--button-default-backgroundColor);
	--button-borderColor: var(--borderColor);
	--button-borderWidth: var(--borderWidth);
	--button-textColor: var(--button-default-textColor);

	cursor: pointer;

	padding: var(--button-paddingY) var(--button-paddingX);

	background-color: var(--button-backgroundColor);
	box-shadow: 0 0 0 var(--button-borderWidth) var(--button-borderColor);
	border-radius: 0.33em;

	color: var(--button-textColor);
	text-align: center;

	transition: var(--active-transitionOutDuration) var(--transition-easeOutExpo);

	&:active {
		transition-duration: var(--active-transitionInDuration);
		opacity: var(--active-opacity);
		scale: var(--active-scale);
	}

	&.primary {
		--button-backgroundColor: var(--button-primary-backgroundColor);
		--button-borderColor: transparent;
		--button-textColor: var(--button-primary-textColor);
	}

	&.small {
		font-size: 0.8em;
	}

	&.smaller {
		font-size: 0.65em;
	}

	&.destructive {
		--button-textColor: #ff1111;
	}

	&:disabled,
	&[aria-disabled="true"] {
		opacity: 0.5;
	}
}

.card {
	--card-paddingX: 1.75em;
	--card-paddingY: 1em;
	--card-backgroundColor: var(--card-default-backgroundColor);
	--card-borderColor: var(--borderColor);
	--card-borderWidth: var(--borderWidth);
	--card-cornerRadius: 0.33em;

	&.success {
		--card-backgroundColor: var(--card-typeSuccess-backgroundColor);
		--card-borderColor: var(--card-typeSuccess-borderColor);
	}

	&.warning {
		--card-backgroundColor: var(--card-typeWarning-backgroundColor);
		--card-borderColor: var(--card-typeWarning-borderColor);
	}

	&.error {
		--card-backgroundColor: var(--card-typeError-backgroundColor);
		--card-borderColor: var(--card-typeError-borderColor);
	}

	&.small {
		--card-paddingX: 1em;
		--card-paddingY: 0.5em;
		font-size: 0.66em;
	}

	/* clip-path: inset(calc(-1 * var(--card-borderWidth)) round calc(var(--card-cornerRadius) + var(--card-borderWidth))); */
	overflow: hidden;
	
	padding: var(--card-paddingY) var(--card-paddingX);
	background-color: var(--card-backgroundColor);
	box-shadow: 0 0 0 var(--card-borderWidth) var(--card-borderColor);
	border-radius: var(--card-cornerRadius);

	transition: 0.3s background-color var(--transition-easeOutExpo);

	& p {
		font-size: 0.888em;
	}

	&:has(:is(header, section, footer)),
	:has(> :is(header, section, footer)) {
		padding: 0;
		row-gap: var(--card-borderWidth);

		& :is(header, section, footer) {
			padding: var(--card-paddingY) var(--card-paddingX);

			box-shadow: 0 0 0 var(--card-borderWidth) var(--card-borderColor);
		}
	}

	&.column:has(:is(header, section, footer)) {
		row-gap: var(--card-borderWidth);
	}

	.card {
		margin: -1px;
	}
}

.annotation {
	opacity: 0.5;
	font-size: 0.85em;
}

fieldset {
	transition: 0.3s var(--transition-easeOutExpo);

	&:disabled,
	*[aria-disabled="true"] {
		opacity: 0.25;
	}
}

code, .code {
	font-family: monospace;
	font-size-adjust: from-font;
	font-size: 0.9em;
}

hr {
	border-top: solid var(--borderWidth) var(--borderColor);
}

[data-before]::before {
	content: attr(data-before);
}

[data-after]::after {
	content: attr(data-after);
}

.loading {
	cursor: progress;
}

.smaller {
	font-size: smaller;
}
