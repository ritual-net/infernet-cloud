{
	"name": "infernet-cloud",
	"version": "0.0.1",
	"private": true,
	"scripts": {
		"init:local": "cp -n .env.local.example .env.local; pnpm run local:server:init; pnpm run local:edgedb:init",
		"init:docker": "cp -n .env.docker.example .env.docker; pnpm install; pnpm run docker:edgedb:init",
		"start:local": "pnpm store prune; pnpm run local:server:start",
		"start:local:host": "pnpm store prune; pnpm run local:caddy:start; pnpm run local:server:start:host",
		"start:docker": "pnpm run docker:start",
		"local:caddy:start": "caddy --config ./caddy/local.Caddyfile --envfile .env.local start || sudo caddy --config ./caddy/local.Caddyfile --envfile .env.local start",
		"local:caddy:run": "caddy --config ./caddy/local.Caddyfile --envfile .env.local run || sudo caddy --config ./caddy/local.Caddyfile --envfile .env.local run",
		"local:caddy:stop": "caddy stop", 
		"local:server:init": "pnpm install && pnpm run build",
		"local:server:start": "pnpm run preview",
		"local:server:start:host": "pnpm run preview --host", 
		"local:server:dev": "vite dev",
		"local:server:dev:debug": "NODE_OPTIONS='--inspect=localhost:9229' vite dev",
		"local:edgedb:init": "edgedb project init; pnpm run local:edgedb:migrate",
		"local:edgedb:init:auth": "edgedb query -f ./dbschema/bootstrap/auth.edgeql",
		"local:edgedb:migrate": "edgedb migration create; edgedb migrate; pnpm run edgedb:generate",
		"local:edgedb:destroy": "edgedb instance destroy -I infernet_cloud --force",
		"local:edgedb:cli": "edgedb",
		"local:edgedb:ui": "edgedb ui",
		"docker:start": "pnpm run docker-compose up --detach && pnpm run docker-compose logs -f",
		"docker:start:force": "pnpm run docker-compose build --force-rm --no-cache && pnpm run docker:start",
		"docker:stop": "pnpm run docker-compose down",
		"docker:clean": "docker system prune -f",
		"docker:server:restart": "pnpm run docker:clean && pnpm run docker-compose up --build --no-deps --detach server",
		"docker:edgedb:init": "pnpm run docker:edgedb:init:auth",
		"docker:edgedb:init:auth": "pnpm run docker-compose up edgedb --wait && pnpm run docker:edgedb:cli query -f ./dbschema/bootstrap/auth.edgeql",
		"docker:edgedb:restart": "pnpm run docker:clean && pnpm run docker-compose up --build --no-deps --detach edgedb",
		"docker:edgedb:backup": "cp -r edgedb-data \"edgedb-data.backup.$(date +%s)\"",
		"docker:edgedb:destroy": "sh -c 'read -p \"Destroy EdgeDB Docker volume? (y/N): \" confirm && case $confirm in y|Y) pnpm run docker-compose down edgedb && rm -rf edgedb-data ;; *) echo \"Operation cancelled\" ;; esac'",
		"docker:edgedb:cli": "sh -c '. .env.docker && printf \"%s\\n\" \"$EDGEDB_SERVER_PASSWORD\" | pnpm run docker-compose exec -T edgedb edgedb --tls-security insecure --password-from-stdin'",
		"docker-compose": "docker compose --env-file .env.docker",
		"build": "vite build",
		"preview": "vite preview",
		"edgedb:generate": "pnpm exec generate interfaces && pnpm exec generate edgeql-js --target ts",
		"test": "pnpm run test:integration && pnpm run test:unit",
		"check": "svelte-kit sync && svelte-check --tsconfig ./tsconfig.json",
		"check:watch": "svelte-kit sync && svelte-check --tsconfig ./tsconfig.json --watch",
		"lint": "prettier --check . && eslint .",
		"format": "prettier --write .",
		"test:integration": "playwright test",
		"test:unit": "vitest"
	},
	"devDependencies": {
		"@csstools/postcss-light-dark-function": "^2.0.2",
		"@edgedb/generate": "^0.4.1",
		"@melt-ui/pp": "^0.3.2",
		"@melt-ui/svelte": "^0.83.0",
		"@playwright/test": "^1.42.1",
		"@sveltejs/adapter-auto": "^3.2.0",
		"@sveltejs/adapter-node": "^4.0.1",
		"@sveltejs/kit": "^2.5.5",
		"@sveltejs/vite-plugin-svelte": "^3.0.2",
		"@types/eslint": "8.56.0",
		"@types/link2aws": "^1.0.3",
		"@types/node": "^20.11.30",
		"@types/tar": "^6.1.11",
		"@typescript-eslint/eslint-plugin": "^6.21.0",
		"@typescript-eslint/parser": "^6.21.0",
		"eslint": "^8.57.0",
		"eslint-config-prettier": "^9.1.0",
		"eslint-plugin-svelte": "^2.35.1",
		"postcss": "^8.4.38",
		"postcss-load-config": "^5.0.3",
		"postcss-nesting": "^12.1.0",
		"prettier": "^3.2.5",
		"prettier-plugin-svelte": "^3.2.2",
		"svelte": "^4.2.12",
		"svelte-check": "^3.6.8",
		"tar": "^6.2.1",
		"tslib": "^2.6.2",
		"typescript": "^5.4.3",
		"vite": "^5.2.6",
		"vitest": "^1.4.0"
	},
	"dependencies": {
		"@aws-sdk/client-ec2": "^3.544.0",
		"@dagrejs/dagre": "^1.1.4",
		"@fontsource/barlow": "^5.0.12",
		"@google-cloud/compute": "^4.3.0",
		"@tanstack/svelte-query": "^5.28.9",
		"@xyflow/svelte": "^0.1.16",
		"async-cleanup": "^1.0.0",
		"autoprefixer": "^10.4.20",
		"aws-sdk": "^2.1588.0",
		"edgedb": "^1.4.1",
		"googleapis": "^131.0.0",
		"html-to-image": "^1.11.11",
		"link2aws": "^1.0.21",
		"mermaid": "^11.0.2",
		"svelte-headless-table": "^0.18.2",
		"sveltekit-flash-message": "^2.4.4",
		"sveltekit-superforms": "^2.12.2",
		"viem": "^2.13.8",
		"yup": "^1.4.0"
	},
	"type": "module",
	"pnpm": {
		"patchedDependencies": {
			"link2aws@1.0.21": "patches/link2aws@1.0.21.patch"
		}
	}
}
